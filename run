#!/bin/bash

source "shell_helpers.sh"
source "docker_helpers.sh"

dir=$( cd "$( dirname "$0" )" && pwd )

PROJECT_NAME=`basename $(pwd)`

declare -A opts opt_descriptions opt_types

opts=(			[--no-port]=false [--help]=false [--clean]=false)

opt_descriptions=(	[--no-port]="Do not bind port to host" [--help]="Display usage"
			[--clean]="Kill running containers")

opt_types=(		[--no-port]="presence" [--help]="presence" [--clean]="presence")

usage(){
	echo "Run the container with proper linking and other niceties"

	opt_string="option\tdefault\tdescription"
	for o in ${!opts[@]} ; do
		opt_string="$opt_string\n$o\t${opts[$o]}\t${opt_descriptions[$o]}"
	done

	echo -e $opt_string | column -s$'\t' -t
}

i=$#
while [[ $i > 0 ]] ; do # That's right. I need longargs, your move getopts
	case "${opt_types[$1]}" in
		"presence") opts[$1]=true ; shift ;;
		"position") opts[$1]=$2 ; shift 2 ;;
	esac
	let "i=$i-1"
done

fail(){ echo -e "\e[1;31m[fail]\e[0m $1 " ; exit ${2:-1} ; }
succeed(){ echo -e "\e[1;32m[success]\e[0m $1 " ; exit ${2:-0} ; }

if ${opts[--help]} ; then usage ; exit 0 ; fi

clean(){
	if [[ $# -eq 0 ]] ; then
		clean $PROJECT_NAME"_data"
	else
		docker stop -t 2 "$1" | xargs docker rm -v
		true # Errors smerrors
	fi
}

if ${opts[--clean]} ; then clean && succeed "cleaned" ; fi

DOCKER_OPTS="-it --rm --volumes-from $PROJECT_NAME""_data \
	-v $dir:/go/src/github.com/code9io/go-angular \
	$EXTRA_DOCKER_OPTS"

if ! ${opts[--no-port]} ; then DOCKER_OPTS="$DOCKER_OPTS -p 80:80" ; fi

docker run --name $PROJECT_NAME"_data" -v /go -d $PROJECT_NAME &>/dev/null

(docker run $DOCKER_OPTS $PROJECT_NAME ${@:-bash -c 'go build && go run main.go'} \
	&& succeed "ok") || fail "not ok"
